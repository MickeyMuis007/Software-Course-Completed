version: '3.7'

networks:
  corp:
    driver: bridge

services:
  # db:
  #   container_name: globalmantics-db
  #   image: mysql
  #   environment:
  #     MYSQL_ROOT_PASSWORD: sha256_password
  #     MYSQL_DATABASE: globalmantics-db
  #     MYSQL_USER: mike
  #     MYSQL_PASSWORD: sha256_password
  #   volumes:
  #     - ''
  # mysql-cli:
  #   container_name: mysql-cli
  #   image: mysql
  zookeeper:
    container_name: zookeeper
    image: zookeeper:3.5.5
    hostname: zookeeper
    ports:
      - '2181:2181'
      - '2888:2888'
      - '3888:3888'
    networks:
      - corp
  kafka:
    # container_name: kafka
    image: debezium/kafka:1.0
    hostname: kafka
    ports:
      - '9092:9092'
    networks:
      - corp
    command: ["./wait-for-dependencies.sh", "zookeeper", "kafka"]
    restart: always
    # links:
    #   - zookeeper
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper'
      # KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      # KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://broker:29092,PLAINTEXT_HOST://localhost:9092
      # KAFKA_METRIC_REPORTERS: io.confluent.metrics.reporter.ConfluentMetricsReporter
      # KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      # KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      # CONFLUENT_METRICS_REPORTER_BOOTSTRAP_SERVERS: broker:29092
      # CONFLUENT_METRICS_REPORTER_ZOOKEEPER_CONNECT: zookeeper:2181
      # CONFLUENT_METRICS_REPORTER_TOPIC_REPLICAS: 1
      # CONFLUENT_METRICS_ENABLE: 'true'
      # CONFLUENT_SUPPORT_CUSTOMER_ID: 'anonymous'
  # kafka-connect:
  #   container_name: kafka-connect
  #   image: kafka-connect
  